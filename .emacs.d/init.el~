;; load-pathの設定
(add-to-list 'load-path "~/.emacs.d/site-lisp/")
(add-to-list 'load-path "~/.emacs.d/elpa/")
(add-to-list 'custom-theme-load-path "~/.emacs.d/elpa")

(when (require 'color-theme)
(color-theme-initialize)
;;(when (require 'color-theme-solarized)
(when (require 'solarized-theme)
(solarized-dark-theme)))

;; ウィンドウサイズ
(defun window-resizer ()
  "Control window size and position."
  (interactive)
  (let ((window-obj (selected-window))
	(current-width (window-width))
	(current-height (window-height))
	(dx (if (= (nth 0 (window-edges)) 0) 1
	      -1))
	(dy (if (= (nth 1 (window-edges)) 0) 1
	      -1))
	c)
    (catch 'end-flag
      (while t
	(message "size[%dx%d]"
		 (window-width) (window-height))
	(setq c (read-char))
	(cond ((= c ?l)
	       (enlarge-window-horizontally dx))
	      ((= c ?h)
	       (shrink-window-horizontally dx))
	      ((= c ?j)
	       (enlarge-window dy))
	      ((= c ?k)
	       (shrink-window dy))
	      ;; otherwise
	      (t
	       (message "Quit")
	       (throw 'end-flag t)))))))
(global-set-key "\C-c\C-y" 'window-resizer)

;; C-hをバックスペースに
(keyboard-translate ?\C-h ?\C-?)

;; C-tでウィンドウ切り替え
(global-set-key (kbd "C-t") 'other-window)

;; バックアップファイルを作らない
(setq backup-inhibited t)

;; 行数表示
(global-linum-mode t)

;; リージョンの強調表示
(setq transient-mark-mode t)

;; 検索(C-s)で大文字小文字を区別しない
(setq completion-ignore-case t)

;; bufferの表示をまともに
(global-set-key "\C-x\C-b" 'bs-show)

;; 対応する括弧をハイライト
(show-paren-mode 1)

;;alt-1でmake
(global-set-key "\M-1" 'compile)

;;C-c rでreplace-string
(global-set-key "\C-cr" 'replace-string)

;;リージョン内の置換
(setq transient-mark-mode t)

;; マウスホイールの設定
;; ;; マウスホイールでのスクロール速度の設定
(setq mouse-wheel-scroll-amount '(3 ((shift) . 10) ((control) . nil)))
;; ;; マウスホイールでのスクロールの加速をするかどうか
(setq mouse-wheel-progressive-speed nil)

;; ewwの検索エンジン設定
(setq eww-search-prefix "http://www.google.co.jp/search?q=")

;; list-packageの設定 
(package-initialize)
(add-to-list 'package-archives '("marmalade" . "http://marmalade-repo.org/packages/"))
(add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/") t)

;; auto-complete
(require 'auto-complete)
(require 'auto-complete-config)
(global-auto-complete-mode t)

;; Flycheck
;(require 'flycheck)
;(add-hook 'after-init-hook #'global-flycheck-mode)
;;;; C
;;(add-hook 'c-mode-common-hook
;;	  (lambda ()
;;	    (local-set-key (kbd "C-c C-p") 'flycheck-previous-error)
;;	    (local-set-key (kbd "C-c C-n") 'flycheck-next-error)
;;	    ))
;(add-hook 'c++-mode-hook
;	  (lambda ()
;	    (setq flycheck-gcc-language-standard "c++11")
;	    (local-set-key (kbd "C-c C-p") 'flycheck-previous-error)
;	    (local-set-key (kbd "C-c C-n") 'flycheck-next-error)
;	    ))
;;;; D
;(add-hook 'd-mode-hook
;	  (lambda ()
;	    (local-set-key (kbd "C-c C-p") 'flycheck-previous-error)
;	    (local-set-key (kbd "C-c C-n") 'flycheck-next-error)
;    ))
;;;; Python
;(add-hook 'python-mode-hook
;	  (lambda ()
;	    (local-set-key (kbd "C-c C-p") 'flycheck-previous-error)
;	    (local-set-key (kbd "C-c C-n") 'flycheck-next-error)
;	    ))
;; Flycheck-d-unittest
;;(require 'flycheck-d-unittest)
;;(setup-flycheck-d-unittest)


;;make中にオートスクロール
(setq compilation-scroll-output t)
;;*compilation*バッファを自動で閉じる
(bury-successful-compilation t)

;; フォント設定
(set-face-attribute 'default nil
		    :family "ゆたぽん（コーディング）Backsl"
		    :height 135)


;; dired-mode設定
(ffap-bindings)
;;;; dired-modeにて"r"でリネーム可能. C-x C-s で保存
(add-hook 'dired-load-hook (lambda ()
                  (define-key dired-mode-map "r" 'wdired-change-to-wdired-mode)))

;; Edit with Emacsの設定
(require 'edit-server)
(edit-server-start)
;;;; 新しくフレームを開かない場合
;;(setq edit-server-new-frame nil)


;; Evinceとの連携
;; backward search
(require 'dbus)
(defun un-urlify (fname-or-url)
  "A trivial function that replaces a prefix of file:/// with just /."
  (if (string= (substring fname-or-url 0 8) "file:///")
      (substring fname-or-url 7)
    fname-or-url))
(defun evince-inverse-search (file linecol &rest ignored)
  (let* ((fname (decode-coding-string (url-unhex-string (un-urlify file)) 'utf-8))
         (buf (find-file fname))
         (line (car linecol))
         (col (cadr linecol)))
    (if (null buf)
        (message "[Synctex]: %s is not opened..." fname)
      (switch-to-buffer buf)
      (goto-line (car linecol))
      (unless (= col -1)
        (move-to-column col)))))
(dbus-register-signal
 :session nil "/org/gnome/evince/Window/0"
 "org.gnome.evince.Window" "SyncSource"
 'evince-inverse-search)

;; jedi
;(require 'jedi-core)
;(setq jedi:complete-on-dot t)
;(setq jedi:use-shortcuts t)
;(add-hook 'python-mode-hook 'jedi:setup)
;(add-to-list 'company-backends 'company-jedi) ; backendに追加
